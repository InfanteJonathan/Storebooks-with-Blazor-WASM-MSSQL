@inject LibroService _service


<Button Color="Color.Primary" Clicked="@ShowModal">Nuevo Libro</Button>

<Modal @ref="modalRef">
    <ModalContent Centered>
        <ModalHeader>
            <ModalTitle>Crear Nuevo Libro</ModalTitle>
            <CloseButton />
        </ModalHeader>
        <ModalBody>
            <Field>
                <FieldLabel>Titulo</FieldLabel>
                <TextEdit @bind-Text="@libro.Titulo" Placeholder="Ingresar Titulo..." />
            </Field>
            <Field>
                <FieldLabel>Autor</FieldLabel>
                <TextEdit @bind-Text="@libro.Autor" Placeholder="Ingresar Autor..." />
            </Field>
            <Field>
                <FieldLabel>Categoria</FieldLabel>
                <Select @bind-SelectedValue="@libro.Categoria" >
                    <SelectItem>Seleccione una categoria...</SelectItem>
                    @foreach(var item in categorias)
                    {
                        <SelectItem Value="@item.NombreCategoria" >@item.NombreCategoria</SelectItem>
                    }
                </Select>
            </Field>
            <Field>
                <FieldLabel>Precio</FieldLabel>
                <NumericEdit TValue="decimal" @bind-Value="@libro.Precio" Placeholder="Ingresar precio"/>
            </Field>
            <Field>
                <FieldLabel>Cantidad</FieldLabel>
                <NumericEdit TValue="int" @bind-Value="@libro.Cantidad" Placeholder="Ingresar Cantidad" />
            </Field>
            <Field>
                <FieldLabel>Imagen</FieldLabel>
                <TextEdit @bind-Text="libro.Imagen" Placeholder="Ingresar Imagen..." />
            </Field>
            <Field>
                <FieldLabel>Fecha de Publicación</FieldLabel>
                <DateEdit @bind-Date="@libro.FechaPublicacion" TValue="DateTime?" />
            </Field>


        </ModalBody>
        <ModalFooter>
            <Button Color="Color.Secondary" Clicked="@HideModal">Cerrar</Button>
            <Button Color="Color.Primary" Clicked="@Registrar">Registrar</Button>
        </ModalFooter>
    </ModalContent>
</Modal>





@code {

    [Parameter]
    public EventCallback<bool> OnDatoCreado { get; set; }

    List<CategoriaViewModel> categorias = new List<CategoriaViewModel>();
    LibroViewModel libro = new LibroViewModel();
    private bool exito;
    private Modal modalRef;

    

    protected override async Task OnInitializedAsync()
    {
        await CargarCategorias();
    }

    async Task CargarCategorias()
    {
        categorias = await http.GetFromJsonAsync<List<CategoriaViewModel>>("api/categorias");

    }

    async Task Registrar()
    {
        var response = await _service.Crear(libro);
        await OnDatoCreado.InvokeAsync(response.Exito);
        await HideModal();    


    }

    private Task ShowModal()
    {
        return modalRef.Show();
    }

    private Task HideModal()
    {
        return modalRef.Hide();        
    }


}
